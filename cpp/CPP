snippet CPP
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

template<class T>
using minheap = priority_queue<T, vector<T>, greater<T> >;

template<class T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update> ;

template<class key, class value, class cmp = std::less<key>>
using ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;

#define ff first
#define ss second
#define ll long long
#define all(sss) (sss).begin(),(sss).end()
#define pb push_back
#define pob pop_back
#define endl "\n"
#define input(ass) for(auto &x:(ass)) cin>>x;
#define iendl "\n", cout<<flush

const int mod = 1000000007;
// const int mod = 998244353;
typedef unsigned long long ull;
typedef long double lld;

#ifdef LOCAL
#include "../.vim/dbg.h"
#else
#define dbg(...) "11-111"
#endif

// help
ll LCM(ll aaa, ll bbb) {return (aaa / __gcd(aaa, bbb)) * bbb;}
ll power(ll aaa, ll bbb, int md = mod) {ll ans = 1; while (bbb) {if (bbb & 1) ans = (ans * aaa) % md; bbb >>= 1; aaa = (aaa * aaa) % md;} return ans;}
ll mod_inv(ll a, int md = mod) {return power(a, md - 2, md);}

/*--------------------------------- 8===> ---------------------------------*/
void solve();
int32_t main() {
    ios::sync_with_stdio(0); cin.tie(0);
    int TT = 1;
    cin >> TT;
    for (int TEST = 1; TEST <= TT; TEST++)
        solve();

}

void solve() {

}
endsnippet
